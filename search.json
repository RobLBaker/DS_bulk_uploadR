[{"path":[]},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Generate and Populate the input file","text":"Carefully constructing inspecting input file important. bulk_reference_generation() function run series data validation steps make sure input file properly formatted. errors generated input data validation need fixed references created files uploaded. validation steps meant help minimize inadvertent misuse functions take place careful human inspection. Please make sure input file properly specified. strongly recommend testing (subset ?) input file development server setting parameter dev = TRUE using bulk_reference_generation() function.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"create-an-input-template","dir":"Articles","previous_headings":"","what":"Create an input template","title":"Generate and Populate the input file","text":"DataStore reference type potentially unique backend storage system potentially unique set possible fields. Therefore need separate input template file reference type plan upload DataStore. create relevant template input file, use function make_input_template() pass appropriate DataStore reference type name. Currently following reference types supported: AudioRecording following line code write file AudioRecording_input.txt current working directory (can customize file written specifying write_path, defaults current working directory). full list available reference types DataStore well appropriate name use input.txt file, see swagger documentation DataStore ReferenceTypes API example code.","code":"make_input_template(\"AudioRecording\")"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"editing-the-input-template","dir":"Articles","previous_headings":"","what":"Editing the input template","title":"Generate and Populate the input file","text":"input template designed easy understand human-readable. Yet, used computer input must crafted rules may seem intuitive. Please take care read instructions populating input template. change column names. One suggestion open .txt file Excel edit excel. can cause issues date formats, please see section , “Working dates”.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"reference-type","dir":"Articles","previous_headings":"Editing the input template","what":"Reference type","title":"Generate and Populate the input file","text":"“reference_type” column put reference type reference created using data particular row. Make sure use DataStore back-end reference type names may differ reference type displayed DataStore website. Pay careful attention spelling, spaces (lack thereof) pattern capitalization.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"files-to-upload","dir":"Articles","previous_headings":"Editing the input template","what":"Files to upload","title":"Generate and Populate the input file","text":"file_path column input.txt file specifies location file(s) upload reference created DataStore. full path name starting “C:\\users” relative path current directory. need specify file name(s), just path files. files within specified directory uploaded reference created regardless file type. one places make fairly critical mistakes fairly large consequences. instance set file path just “C:\\”, function attempt upload files hard drive. please make sure directory supply specific possible contains files want uploaded. new reference file path specified. means need organize files directory files associated specific reference intend create. files associated reference nothing else directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"checks-on-files-uploads","dir":"Articles","previous_headings":"Editing the input template > Files to upload","what":"Checks on files uploads","title":"Generate and Populate the input file","text":"bulk_reference_generation() function can impose limits total number size files uploaded. default, function produce warning attempt upload 250 files 50 GB data time (per reference entire process). function produce error fail upload files attempt upload 500 files 100 GB data time. parameters easily adjusted suite needs. See documentation bulk_reference_generation Additionally, bulk_reference_generation() function creates anything DataStore, informed total number references function create, total number files upload, total data volume (GB) uploaded. option proceed end function values look correct .","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"section","dir":"Articles","previous_headings":"Editing the input template","what":"508","title":"Generate and Populate the input file","text":"need supply information whether files uploading reference 508 compliant (“yes”) (“”). values apply files supplied file path universally applied files uploaded reference. References mixes files 508 compliant . However, different references can different 508 compliance values associated .","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"reference-title","dir":"Articles","previous_headings":"Editing the input template","what":"Reference title","title":"Generate and Populate the input file","text":"column title input.txt file contain Reference Title. reference (line input.txt file) requires unique title. Supply title without quotes surrounding. Titles informative include acronyms (NPS units, networks, regions, divisions, etc) may broadly known outside NPS. general title seek convey following information: , , . reference? information ? information ? instance veg survey ROMO 2020-2023 might title “Vegetation Survey Data Rocky Mountain National Park 2020-2023”. clearly conveys reference (data vegetation), data (ROMO), dates data span (2020-2023, may differ year activated/published).","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"working-with-dates","dir":"Articles","previous_headings":"Editing the input template","what":"Working with dates","title":"Generate and Populate the input file","text":"prevent excel automatically changing dates non-ISO 8601 format (yyyy-mm-dd), need change global settings computer. PCs search “date time format” start menu. Select “Change date time format” (part system settings). panel “Short Date” choose date formatted YYYY-MM-DD.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"content-begin-date","dir":"Articles","previous_headings":"Editing the input template > Working with dates","what":"Content begin date","title":"Generate and Populate the input file","text":"column content_begin_date input.txt file contain date content reference/files starts ISO 8601 format: YYYY-MM-DD. formats accepted. content begin date today’s date content_end_date.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"content-end-date","dir":"Articles","previous_headings":"Editing the input template > Working with dates","what":"Content end date","title":"Generate and Populate the input file","text":"column content_end_date input.txt file contain date content reference/files ends ISO 8601 format: YYYY-MM-DD. formats accepted. content end date today’s date content_start_date.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"length-of-recording","dir":"Articles","previous_headings":"Editing the input template","what":"Length of recording","title":"Generate and Populate the input file","text":"length_of_recording column input.txt file contain string characters describing duration content. instance, length_of_recording value may “5 hours six minutes 32 sec” (without quotes). value directly used parsed specific format. reference type recording length, leave value blank. following reference types require length_of_recording value: AudioRecording following reference types length_of_recording left blank: Everything else?","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"description","dir":"Articles","previous_headings":"Editing the input template","what":"Description","title":"Generate and Populate the input file","text":"description column input.txt file contain brief description abstract reference. Generally abstracts less 250 words briefly explain , , , , information contained reference. Please include quotations special characters.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"purpose","dir":"Articles","previous_headings":"Editing the input template","what":"Purpose","title":"Generate and Populate the input file","text":"purpose column input.txt file contain brief description purpose reference. purpose may identical description may different.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"notes","dir":"Articles","previous_headings":"Editing the input template","what":"Notes","title":"Generate and Populate the input file","text":"notes column input.txt file contain notes may important understanding reference.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"author-email-addresses","dir":"Articles","previous_headings":"Editing the input template","what":"Author email addresses","title":"Generate and Populate the input file","text":"author_email_list column input.txt contain comma-separated list author’s email addresses. Use full email addresses rather user names (e.g. first_last@nps.gov FMLast@nps.gov). references require least one author. include extra text (quotations, angle brackets, etc). authors must valid NPS employees partners (e.g. @nps.gov, @partner.nps.gov). authors must registered ORCiD added ORCiD active directory/Entra ID. ORCiD Active Directory/Entra ID must format xxxx-xxxx-xxxx-xxxx. Open Researcher Contributor ID (ORCiD) third-party persistent digital identifier associated individuals rather institutions documents. ORCiDs required authors NPS Open Access Plan authors scholarly scientific work. can learn ORCiDs, register , add Active Directory/Entra ID, control automated information flowing ORCiD profile information orcid.org displays NPS Data Publication Best Practices SharePoint site page Persistent Identifiers including ORCiDs. bulk_reference_generation() function automatically extract first name, last name, ORCiDs based supplied email addresses use information populate authors reference.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"licenses","dir":"Articles","previous_headings":"Editing the input template","what":"Licenses","title":"Generate and Populate the input file","text":"license_code column input.txt contain numeric code (1,2,3,4 5) corresponding license reference DataStore. Creative Commons Zero (CC0) license preferred license public content DataStore. Valid codes follows: 1: “Creative Commons Zero v1.0 Universal (CC0)”. preferred license public content. 2: “Creative Commons Attribution 4.0 International” (CC--4.0) 3: “Creative commons Attribution Non Commercial 4.0 International” (CC -NC 4.0) (license may useful working partners external NPS), 4: “Public Domain”, 5: “Unlicensed (public dissemination)” (used restricted content contains confidential unclassified information - CUI). license codes supplied (integers ranging 1-5) valid, function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"producing-units","dir":"Articles","previous_headings":"Editing the input template","what":"Producing Unit(s)","title":"Generate and Populate the input file","text":"column producing_unit input.txt file contain comma-separated list acronyms NPS units contributed producing reference content. instance, IMD network region might responsible creating reference content (e.g. IMR ROMN). must valid NPS unit acronyms, e.g. ROMO RMNP Rocky Mountain National Park IMD Inventory Monitoring Division (IM&D).","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"content-units","dir":"Articles","previous_headings":"Editing the input template","what":"Content Unit(s)","title":"Generate and Populate the input file","text":"column content_units input.txt file contain comma-separated list acronyms NPS unit(s) information reference collected generated. specific park units physical geographies organizational units. instance, YELL (Yellowstone) /GRTE (Grand Teton National Park) GRYN (Greater Yellowstone Network), IMD (Inventory Monitoring Division), NRSS (Natural Resources Science Stewardship Directorate), etc.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Generate-and-Populate-the-input-file.html","id":"keywords","dir":"Articles","previous_headings":"Editing the input template","what":"Keywords","title":"Generate and Populate the input file","text":"keywords column input.txt file contain comma-separated list keywords added reference.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Overview.html","id":"what-this-package-does","dir":"Articles","previous_headings":"","what":"What this Package Does","title":"Overview","text":"DSbulkUploadR package requires use one function, bulk_reference_generation. function takes input .txt file uses : Create draft reference(s) DataStore Populate draft reference supplied information Upload file(s) specified directory draft reference(s) bulk_reference generation return dataframe containing information supplied input .txt file one additinal column containing datastore reference ID newly created reference. may wish write dataframe .csv, .txt, similar records.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Overview.html","id":"what-this-package-doesnt","dir":"Articles","previous_headings":"","what":"What this Package Doesn’t","title":"Overview","text":"Connect VPN NPS network (must connected network use functions) Register ORCiDs authors Add author’s ORCID Active Directory/Entra ID account Provide peer, technical, administrative, review reference(s) created Add taxonomy reference(s) Activate (“publish”) reference(s)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Overview.html","id":"supported-datastore-reference-types","dir":"Articles","previous_headings":"","what":"Supported DataStore Reference Types","title":"Overview","text":"Audio Recording","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/articles/Overview.html","id":"supported-file-types","dir":"Articles","previous_headings":"","what":"Supported File Types","title":"Overview","text":"Upload file types supported. distinction made among file types need designate specific file types. Changing default settings can result virtually limitless numbers sizes files upload. Use caution changing default settings!","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Baker. Author, maintainer.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baker R (2025). DSbulkUploadR: Creates, populates, uploads files multiple DataStore references. R package version 0.0.0.9000, https://github.com/nationalparkservice/DSbulkUploadR.","code":"@Manual{,   title = {DSbulkUploadR: Creates, populates, and uploads files to multiple DataStore references},   author = {Robert Baker},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/nationalparkservice/DSbulkUploadR}, }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/index.html","id":"dsbulkuploadr","dir":"","previous_headings":"","what":"Creates, populates, and uploads files to multiple DataStore references","title":"Creates, populates, and uploads files to multiple DataStore references","text":"DSbulkUploadR (DataStore Bulk Uploader) designed help efficiently transfer data DataStore, create appropriate references, automate populating greatest extent possible.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/index.html","id":"consult-with-the-imd-cso-data-science-team-before-using","dir":"","previous_headings":"","what":"Consult with the IMD CSO Data Science Team before using!","title":"Creates, populates, and uploads files to multiple DataStore references","text":"DSbulkUploadR automates DataStore reference creation file uploads, real possibility using unintended consequences. instance, inadvertently create hundreds thousands draft references need cleaned . really don’t want make mistakes using package. designed easy use - perhaps easy! please consult NPS Inventory Monitoring Central Support Office Data Science Team (currently Judd Patterson, Rob Baker, Wendy Thorsdatter good day, Sarah Wright) using tool. promise can help make life easier! (just might make lives easier ).","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/index.html","id":"currently-supported-datastore-reference-types","dir":"","previous_headings":"","what":"Currently supported DataStore reference types","title":"Creates, populates, and uploads files to multiple DataStore references","text":"Audio Recording","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/bulk_reference_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch bulk reference creation and file upload tool — bulk_reference_generation","title":"Launch bulk reference creation and file upload tool — bulk_reference_generation","text":"function first run run_input_validation supplied .txt information enforce data validation. errors must resolved function proceed.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/bulk_reference_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch bulk reference creation and file upload tool — bulk_reference_generation","text":"","code":"bulk_reference_generation(   filename,   path = getwd(),   max_file_upload = 500,   max_data_upload = 10,   dev = FALSE )"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/bulk_reference_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch bulk reference creation and file upload tool — bulk_reference_generation","text":"filename String. name file information uploaded. path String. Path file. max_file_upload Integer. maximum allowable number files upload. Defaults 500. max_data_upload Integer. maximum allowable amount data upload (GB). Defaults 100. dev Logical. Whether reference creation/file uploads occur development server (TRUE) production server (FALSE). Defaults FALSE","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/bulk_reference_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch bulk reference creation and file upload tool — bulk_reference_generation","text":"Dataframe","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/bulk_reference_generation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch bulk reference creation and file upload tool — bulk_reference_generation","text":"function inform user total number references created, number files uploaded, total volume data uploaded (GB) ask user sure want proceed. function creates draft reference DataStore line input .txt uses information provided .txt populate Reference. Finally, files given path reference .txt uploaded appropriate reference. original dataframe generated .txt returned user single column added: DataStore reference ID newly created reference.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/bulk_reference_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch bulk reference creation and file upload tool — bulk_reference_generation","text":"","code":"if (FALSE) { # \\dontrun{ bulk_reference_generation(filename = \"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_508_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks a column within a supplied file to ascertain whether 508 status has been supplied. — check_508_format","title":"Checks a column within a supplied file to ascertain whether 508 status has been supplied. — check_508_format","text":"Reads .txt file data validation. Checks column files_508_compliant make sure values either 'yes' '', indicates 508 compliant status associated files uploaded DataStore. values missing 'yes' '' (case ignored), function throws error. values either 'yes' '' value associated , function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_508_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks a column within a supplied file to ascertain whether 508 status has been supplied. — check_508_format","text":"","code":"check_508_format(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_508_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks a column within a supplied file to ascertain whether 508 status has been supplied. — check_508_format","text":"filename String. file check. path String. path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_508_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks a column within a supplied file to ascertain whether 508 status has been supplied. — check_508_format","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_508_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks a column within a supplied file to ascertain whether 508 status has been supplied. — check_508_format","text":"","code":"if (FALSE) { # \\dontrun{ check_508_format(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_author_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies author emails supplied in file. — check_author_email","title":"Verifies author emails supplied in file. — check_author_email","text":"Reads .txt file data validation. Checks author emails supplied column author_emails valid NPS emails. instance author emails contain single email comma separated list emails (e.g. just joe.smith@nps.gov joe.smith@nps.gov, jane.doe@partner.nps.gov). email valid NPS email, function throw error list invalid emails (check typos!). emails supplied valid NPS emails, function pass. function uses API rather Active Directory access lists valid NPS emails.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_author_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies author emails supplied in file. — check_author_email","text":"","code":"check_author_email(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_author_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies author emails supplied in file. — check_author_email","text":"filename String. File check. path String. Path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_author_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies author emails supplied in file. — check_author_email","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_author_email.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies author emails supplied in file. — check_author_email","text":"","code":"if (FALSE) { # \\dontrun{ check_author_email(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_authors_orcid.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks to make sure all author email accounts have ORCiDs — check_authors_orcid","title":"Checks to make sure all author email accounts have ORCiDs — check_authors_orcid","text":"Reads .txt file data validation. Checks emails listed column author_emails verifies whether emails ORCiDs associated via NPS API. user account associated email ORCiD associated (including emails valid NPS emails), function throws error lists emails ORCiDs associated . emails tied valid NPS accounts ORCiDs associated , function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_authors_orcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks to make sure all author email accounts have ORCiDs — check_authors_orcid","text":"","code":"check_authors_orcid(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_authors_orcid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks to make sure all author email accounts have ORCiDs — check_authors_orcid","text":"filename String. File check. path String. Path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_authors_orcid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks to make sure all author email accounts have ORCiDs — check_authors_orcid","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_authors_orcid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks to make sure all author email accounts have ORCiDs — check_authors_orcid","text":"","code":"if (FALSE) { # \\dontrun{ check_authors_orcid(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_content_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for valid content unit codes in a file — check_content_units","title":"Checks for valid content unit codes in a file — check_content_units","text":"Reads .txt file data validation. Uses NPS Unit Service API check content_units column contains valid NPS unit codes. invalid content units encountered, function throws error prints list invalid units console. units valid, test passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_content_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for valid content unit codes in a file — check_content_units","text":"","code":"check_content_units(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_content_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for valid content unit codes in a file — check_content_units","text":"filename String. Name file check path String. Path file. Defaults current working directory","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_content_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for valid content unit codes in a file — check_content_units","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_content_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks for valid content unit codes in a file — check_content_units","text":"","code":"if (FALSE) { # \\dontrun{ check_content_units(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_dates_past.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks that dates in a file occurred in the past. — check_dates_past","title":"Checks that dates in a file occurred in the past. — check_dates_past","text":"Reads .txt file data validation. Throws error dates either content_begin_date content_end_date occur current system date. dates occur future function results error. test passes dates occur past (present day).","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_dates_past.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks that dates in a file occurred in the past. — check_dates_past","text":"","code":"check_dates_past(filename, path = getwd)"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_dates_past.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks that dates in a file occurred in the past. — check_dates_past","text":"filename String. Name file check path String. Path file. Defaults current working directory","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_dates_past.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks that dates in a file occurred in the past. — check_dates_past","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_dates_past.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks that dates in a file occurred in the past. — check_dates_past","text":"","code":"if (FALSE) { # \\dontrun{ check_dates_past(\"test_file.txt\") } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_after_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks that content_end_dates occur after content_begin_dates in a file. — check_end_after_start","title":"Checks that content_end_dates occur after content_begin_dates in a file. — check_end_after_start","text":"Reads .txt file data validation. Throws error dates content_end_date column occur date row content_begin_date column. Passes end dates occur date.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_after_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks that content_end_dates occur after content_begin_dates in a file. — check_end_after_start","text":"","code":"check_end_after_start(filename, path = getwd)"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_after_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks that content_end_dates occur after content_begin_dates in a file. — check_end_after_start","text":"filename String. Name file check path String. Path file. Defaults current working directory","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_after_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks that content_end_dates occur after content_begin_dates in a file. — check_end_after_start","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_after_start.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks that content_end_dates occur after content_begin_dates in a file. — check_end_after_start","text":"","code":"if (FALSE) { # \\dontrun{ check_end_after_start(\"test_file.txt\") } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the end_content_date column of an input file for ISO 8601 formatting — check_end_date","title":"Checks the end_content_date column of an input file for ISO 8601 formatting — check_end_date","text":"Reads .txt file data validation. Throws error dates content_end_date column ISO 8601 (yyyy-mm-dd). Passes dates content_begin_date column ISO 8601 format.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the end_content_date column of an input file for ISO 8601 formatting — check_end_date","text":"","code":"check_end_date(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the end_content_date column of an input file for ISO 8601 formatting — check_end_date","text":"filename String. Name file check. path String. Path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the end_content_date column of an input file for ISO 8601 formatting — check_end_date","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_end_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the end_content_date column of an input file for ISO 8601 formatting — check_end_date","text":"","code":"if (FALSE) { # \\dontrun{ check_end_date(\"test_file.txt\") } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether the total number of file to upload exceeds a threshold — check_file_number","title":"Checks whether the total number of file to upload exceeds a threshold — check_file_number","text":"Reads .txt file data validation. Checks number files located directory supplied via column file_path. total number files exceeds file_number_error value, function produces error. total number files exceeds 50% file_number_error value function produces warning. Otherwise function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether the total number of file to upload exceeds a threshold — check_file_number","text":"","code":"check_file_number(filename, path = getwd(), file_number_error = 500)"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether the total number of file to upload exceeds a threshold — check_file_number","text":"filename String. Name file check. path String. Path file check. Defaults current working directory. file_number_error. Integer. Maximum allowable number files. Defaults 500.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether the total number of file to upload exceeds a threshold — check_file_number","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks whether the total number of file to upload exceeds a threshold — check_file_number","text":"","code":"if (FALSE) { # \\dontrun{ check_file_number(\"test_file.txt\") } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether the total file size to upload exceeds some threshold — check_file_size","title":"Checks whether the total file size to upload exceeds some threshold — check_file_size","text":"Reads .txt file data validation. Checks file size files located directory supplied via column file_path. total file size exceeds file_size_error value, function produces error. total number files exceeds 50% file_number_error value function produces warning. Otherwise function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether the total file size to upload exceeds some threshold — check_file_size","text":"","code":"check_file_size(filename, path = getwd(), file_size_error = 100)"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether the total file size to upload exceeds some threshold — check_file_size","text":"filename String. file check, path String. Path file. Defaults current working directory. file_size_error Integer. maximum allowable total file size GB. Defaults 100 GB.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether the total file size to upload exceeds some threshold — check_file_size","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_file_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks whether the total file size to upload exceeds some threshold — check_file_size","text":"","code":"if (FALSE) { # \\dontrun{ check_file_size(\"test_file.txt\") } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_files_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks that each file_path in a file contains files — check_files_exist","title":"Checks that each file_path in a file contains files — check_files_exist","text":"Reads .txt file data validation. item column file_path, function checks whether path given contains file. path given contain files (valid path), function throw error list bad paths. paths contain valid files, function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_files_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks that each file_path in a file contains files — check_files_exist","text":"","code":"check_files_exist(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_files_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks that each file_path in a file contains files — check_files_exist","text":"filename String. input file check. path String. Path input file. Defaults current working directory","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_files_exist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks that each file_path in a file contains files — check_files_exist","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_files_exist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks that each file_path in a file contains files — check_files_exist","text":"","code":"if (FALSE) { # \\dontrun{ check_files_exist(\"test_file.txt\") } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_license_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks an file for valid license types — check_license_type","title":"Checks an file for valid license types — check_license_type","text":"Reads .txt file data validation. Checks values supplied license_code column valid DataStore license codes. Valid codes follows: 1) \"Creative Commons Zero v1.0 Universal (CC0)\". preferred license public content. 2) \"Creative Commons Attribution 4.0 International\", 3) \"Creative commons Attribution Non Commercial 4.0 International\" (license may useful working partners external NPS), 4) \"Public Domain\", 5) \"Unlicensed (public dissemination)\" (used restricted content contains confidential unclassified information - CUI). license codes supplied (integers ranging 1-5) valid, function passes. license code missing invalid, function throws error.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_license_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks an file for valid license types — check_license_type","text":"","code":"check_license_type(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_license_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks an file for valid license types — check_license_type","text":"filename String. File check. path String. Path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_license_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks an file for valid license types — check_license_type","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_license_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks an file for valid license types — check_license_type","text":"","code":"if (FALSE) { # \\dontrun{ check_license_type(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_orcid_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the formatting of ORCiDs associated with NPS emails supplied in a file — check_orcid_format","title":"Checks the formatting of ORCiDs associated with NPS emails supplied in a file — check_orcid_format","text":"Reads .txt file data validation. Uses NPS API check emails listed column author_emails properly formatted ORCiDs (xxxx-xxxx-xxx-xxxx) associated . Lack ORCiD, including supplied email address valid NPS email, considered improperly formatted purposes test. emails supplied properly formatted ORCiDs associated function throws error lists emails properly formatted ORCiDs associated . emails tied valid NPS accounts properly formatted ORCiDs associated , function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_orcid_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the formatting of ORCiDs associated with NPS emails supplied in a file — check_orcid_format","text":"","code":"check_orcid_format(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_orcid_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the formatting of ORCiDs associated with NPS emails supplied in a file — check_orcid_format","text":"filename String. File check. path String. Path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_orcid_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the formatting of ORCiDs associated with NPS emails supplied in a file — check_orcid_format","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_orcid_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the formatting of ORCiDs associated with NPS emails supplied in a file — check_orcid_format","text":"","code":"if (FALSE) { # \\dontrun{ check_orcid_format(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_prod_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for valid producing unit codes in a file — check_prod_units","title":"Checks for valid producing unit codes in a file — check_prod_units","text":"Reads .txt file data validation. Uses NPS Unit Service API check producing_units column contains valid NPS unit codes. invalid producing units encountered, function throws error prints list invalid units console. units valid, test passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_prod_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for valid producing unit codes in a file — check_prod_units","text":"","code":"check_prod_units(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_prod_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for valid producing unit codes in a file — check_prod_units","text":"filename String. Name file check path String. Path file. Defaults current working directory","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_prod_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for valid producing unit codes in a file — check_prod_units","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_prod_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks for valid producing unit codes in a file — check_prod_units","text":"","code":"if (FALSE) { # \\dontrun{ check_units(\"test_file.txt\") } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_ref_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the reference types in a file are valid Data Store reference types — check_ref_type","title":"Checks the reference types in a file are valid Data Store reference types — check_ref_type","text":"Reads .txt file data validation. Checks values supplied column reference_type using DataStore API determine whether valid reference types, stored DataStore backend. Note Reference Type listed DataStore web page (e.g. Audio Recording) correct, valid reference type. case valid reference type AudioRecording. reference type invalid, function throws error prints list invalid reference types. reference types valid, function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_ref_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the reference types in a file are valid Data Store reference types — check_ref_type","text":"","code":"check_ref_type(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_ref_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the reference types in a file are valid Data Store reference types — check_ref_type","text":"filename String. Input file check. path String. Path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_ref_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the reference types in a file are valid Data Store reference types — check_ref_type","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_ref_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the reference types in a file are valid Data Store reference types — check_ref_type","text":"","code":"if (FALSE) { # \\dontrun{ check_ref_type(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_start_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the begin_content_date column of an input file for ISO 8601 formatting — check_start_date","title":"Checks the begin_content_date column of an input file for ISO 8601 formatting — check_start_date","text":"Reads .txt file data validation. Throws error dates content_begin_date column ISO 8601 (yyyy-mm-dd). Passes dates content_begin_date column ISO 8601 format.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_start_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the begin_content_date column of an input file for ISO 8601 formatting — check_start_date","text":"","code":"check_start_date(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_start_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the begin_content_date column of an input file for ISO 8601 formatting — check_start_date","text":"filename String. name file check path String. Path file. Defaults current working directory","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_start_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the begin_content_date column of an input file for ISO 8601 formatting — check_start_date","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_start_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the begin_content_date column of an input file for ISO 8601 formatting — check_start_date","text":"","code":"if (FALSE) { # \\dontrun{ check_start_date <- (\"test_file.txt\")} # }"},{"path":[]},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_users_AD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether a upn supplied is valid. — check_users_AD","text":"","code":"check_users_AD(filename, path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_users_AD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether a upn supplied is valid. — check_users_AD","text":"filename String. File check. path String. Path file. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_users_AD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether a upn supplied is valid. — check_users_AD","text":"NULL (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_users_AD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks whether a upn supplied is valid. — check_users_AD","text":"Reads .txt file data validation. Checks user names supplied column author_upn Active Directory using powershell script verify accounts valid NPS accounts. function throws error lists invalid accounts encountered. Additionally, accounts valid function throws error accounts ORCiDs associated (lists accounts). accounts valid ORCiDs, function passes.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/check_users_AD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks whether a upn supplied is valid. — check_users_AD","text":"","code":"if (FALSE) { # \\dontrun{ check_users_AD(\"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/create_draft_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a blank draft reference on DataStore — create_draft_reference","title":"Creates a blank draft reference on DataStore — create_draft_reference","text":"Creates blank draft reference DataStore","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/create_draft_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a blank draft reference on DataStore — create_draft_reference","text":"","code":"create_draft_reference(draft_title = \"Temp Title\", ref_type, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/create_draft_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a blank draft reference on DataStore — create_draft_reference","text":"draft_title String. title reference. ref_type String. reference type create. dev Logical. reference created development server production server? Defaults FALSE.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/create_draft_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a blank draft reference on DataStore — create_draft_reference","text":"String. DataStore reference number.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/create_draft_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a blank draft reference on DataStore — create_draft_reference","text":"","code":"if (FALSE) { # \\dontrun{ create_draft_reference(draft_title = \"DRAFT TITLE\",                         ref_type = \"AudioRecording\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/make_input_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a template input file — make_input_template","title":"Write a template input file — make_input_template","text":"Writes template input file (e.g. \"AutioRecording_input.txt\") specified path. template input file can edited needed, saved, passed bulk_reference_generation function create specified references.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/make_input_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a template input file — make_input_template","text":"","code":"make_input_template(reference_type = \"AudioRecording\", write_path = getwd())"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/make_input_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a template input file — make_input_template","text":"reference_type String. Case-sensitive DataStore reference type like create input template . Defaults \"AudioRecording\". Note reference_type single word follows DataStore backend naming conventions, necessarily names displayed DataStore website (compare AudioRecording Audio Recording). write_path String. path file written. Defaults current working directory.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/make_input_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a template input file — make_input_template","text":"dataframe (invisibly)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/make_input_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a template input file — make_input_template","text":"currently supported reference_types : AudioRecording.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/make_input_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a template input file — make_input_template","text":"","code":"if (FALSE) { # \\dontrun{ make_input_template() } # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/run_input_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs all validation checks and generates a summary statement — run_input_validation","title":"Runs all validation checks and generates a summary statement — run_input_validation","text":"Runs validation checks generates summary statement","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/run_input_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs all validation checks and generates a summary statement — run_input_validation","text":"","code":"run_input_validation(   filename,   path = getwd(),   max_file_upload = 500,   max_data_upload = 100,   dev = FALSE )"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/run_input_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs all validation checks and generates a summary statement — run_input_validation","text":"filename String. Name file data validation. path String. Path file. Defaults current working directory. max_file_upload Integer. Maximum number files can uploaded. Defaults 500. max_data_upload Integer. Maximum amount data can uploaded, GB. Defaults 100. dev Logical. functions target development server? Defaults FALSE.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/run_input_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs all validation checks and generates a summary statement — run_input_validation","text":"Vector. list named numbers (number errors, number warnings)","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/run_input_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs all validation checks and generates a summary statement — run_input_validation","text":"","code":"if (FALSE) { # \\dontrun{ run_input_validation(filename = \"test_file.txt\")} # }"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/upload_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Uploads files of indeterminant size to a DataStore reference — upload_files","title":"Uploads files of indeterminant size to a DataStore reference — upload_files","text":"file uploader largely borrowed R package NPSdatastore. take file size upload given reference. involves chunking file smaller pieces order upload larger files.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/upload_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uploads files of indeterminant size to a DataStore reference — upload_files","text":"","code":"upload_files(   filename,   path,   reference_id,   is508 = FALSE,   chunk_size_mb = 1,   retry = 1,   dev = FALSE )"},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/upload_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uploads files of indeterminant size to a DataStore reference — upload_files","text":"filename String. Name file uploaded. path String. Location file uploaded. reference_id String. reference number DataStore reference file uploaded . is508 Logical. file question 508 compliant? TRUE = Yes, FALSE = . Defaults FALSE. chunk_size_mb Integer. Size file chunks uploaded, MB retry Integer. Number times retry uploading file chunks given chunk fails. dev Logical. Defaults FALSE. FALSE means files uploaded production server. TRUE means files uploaded development server. Use Dev = TRUE testing function.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/upload_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uploads files of indeterminant size to a DataStore reference — upload_files","text":"List. information uploaded file.","code":""},{"path":"https://nationalparkservice.github.io/DSbulkUploadR/reference/upload_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uploads files of indeterminant size to a DataStore reference — upload_files","text":"","code":"if (FALSE) upload_files(filename = \"example_file.wav\", path = getwd(), reference_id = 1234567, is508 = FALSE, dev = TRUE) # \\dontrun{}"},{"path":[]}]
